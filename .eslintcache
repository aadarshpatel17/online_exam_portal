[{"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\index.js":"1","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\reportWebVitals.js":"2","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\App.js":"3","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Dashboard.js":"4","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\ExamPage.js":"5","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\LandingPage.js":"6","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\util.js":"7","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Navbar.js":"8","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\SignOrLogin.js":"9","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Footer.js":"10","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\SignupPage.js":"11","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\LoginPage.js":"12"},{"size":500,"mtime":1610369588000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610369588000,"results":"15","hashOfConfig":"14"},{"size":537,"mtime":1611295078886,"results":"16","hashOfConfig":"14"},{"size":1677,"mtime":1611299678748,"results":"17","hashOfConfig":"14"},{"size":5290,"mtime":1611299610026,"results":"18","hashOfConfig":"14"},{"size":655,"mtime":1610369588000,"results":"19","hashOfConfig":"14"},{"size":225,"mtime":1610369588000,"results":"20","hashOfConfig":"14"},{"size":647,"mtime":1610369588000,"results":"21","hashOfConfig":"14"},{"size":755,"mtime":1610369588000,"results":"22","hashOfConfig":"14"},{"size":1491,"mtime":1610369588000,"results":"23","hashOfConfig":"14"},{"size":2839,"mtime":1611300100020,"results":"24","hashOfConfig":"14"},{"size":2080,"mtime":1611298265368,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"12064gs",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\index.js",[],["55","56"],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\reportWebVitals.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\App.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Dashboard.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\ExamPage.js",["57"],"import React, { Component } from \"react\";\nimport questions from \"../questions.json\";\nimport M from \"materialize-css\";\n\nimport isEmpty from \"./util\";\n\nexport default class ExamPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: props.location.state,\n      questions,\n      crtQuestion: {},\n      nxtQuestion: {},\n      answer: \"\",\n      numberOfQuestions: 15,\n      numberOfAnsweredQuestion: 0,\n      crtQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      time: {},\n    };\n    this.interval = null;\n  }\n\n  componentDidMount() {\n    const { questions, crtQuestion, nxtQuestion } = this.state;\n    this.displayQuestions(questions, crtQuestion, nxtQuestion);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval)\n  }\n\n  displayQuestions = (\n    questions = this.state.questions,\n    crtQuestion,\n    nxtQuestion\n  ) => {\n    let { crtQuestionIndex } = this.state;\n    if (!isEmpty(this.state.questions)) {\n      questions = this.state.questions;\n      crtQuestion = questions[crtQuestionIndex];\n      nxtQuestion = questions[crtQuestionIndex + 1];\n      const answer = crtQuestion.answer;\n      clearInterval(this.interval);\n      this.startTimer();\n      this.setState({\n        crtQuestion,\n        nxtQuestion,\n        answer,\n      });\n    }\n  };\n\n  handleOptionClick = (e) => {\n    if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase())\n      this.correctAnswers();\n    else this.wrongAnswers();\n  };\n\n  correctAnswers = () => {\n    M.toast({\n      html: \"Correct Answer!\",\n      classes: \"toast-valid\",\n      displayLength: 1500,\n    });\n    this.setState(\n      (preState) => ({\n        score: preState.score + 1,\n        correctAnswers: preState.correctAnswers + 1,\n        crtQuestionIndex: preState.crtQuestionIndex + 1,\n        numberOfAnsweredQuestion: preState.numberOfAnsweredQuestion + 1,\n      }),\n      () => {\n        if (this.state.nxtQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.crtQuestion,\n            this.state.nxtQuestion\n          );\n        }\n      }\n    );\n  };\n\n  wrongAnswers = () => {\n    navigator.vibrate(1000);\n    M.toast({\n      html: \"Wrong Answer!\",\n      classes: \"toast-invalid\",\n      displayLength: 1500,\n    });\n    this.setState(\n      (preState) => ({\n        wrongAnswers: preState.wrongAnswers + 1,\n        crtQuestionIndex: preState.crtQuestionIndex + 1,\n        numberOfAnsweredQuestion: preState.numberOfAnsweredQuestion + 1,\n      }),\n      () => {\n        if (this.state.nxtQuestion === undefined) {\n          this.endGame();\n        } else {\n          this.displayQuestions(\n            this.state.questions,\n            this.state.crtQuestion,\n            this.state.nxtQuestion\n          );\n        }\n      }\n    );\n  };\n\n  startTimer = () => {\n    const timer = Date.now() + 12000;\n    this.interval = setInterval(() => {\n      const now = new Date();\n      const distance = timer - now;\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        clearInterval(this.interval);\n        this.setState(\n          (preState) => ({\n            wrongAnswers: preState.wrongAnswers + 1,\n            crtQuestionIndex: preState.crtQuestionIndex + 1,\n            numberOfAnsweredQuestion: preState.numberOfAnsweredQuestion + 1,\n          }),\n          () => {\n            this.displayQuestions(\n              this.state.questions,\n              this.state.crtQuestion,\n              this.state.nxtQuestion\n            );\n          }\n        );\n      } else {\n        this.setState({\n          time: {\n            seconds,\n          },\n        });\n      }\n    }, 1000);\n  };\n\n  endGame = () => {\n    alert(\"Ended!\");\n    const {\n      score,\n      numberOfQuestions,\n      numberOfAnsweredQuestion,\n      correctAnswers,\n      wrongAnswers,\n      user,\n    } = this.state;\n    const summary = {\n      score,\n      numberOfQuestions,\n      numberOfAnsweredQuestion,\n      correctAnswers,\n      wrongAnswers,\n      user\n    };\n    setTimeout(() => {\n      this.props.history.push(\"/dashboard\", summary);\n    }, 1000);\n  };\n\n  render() {\n    const { crtQuestion, time } = this.state;\n    return (\n      <div>\n        <div className=\"exam-section\">\n          <div className=\"exam-heading\">\n            <a className=\"navbar-brand\" href=\"#\">\n              <i className=\"fa fa-superpowers fa-lg\"></i>\n              EXAMR\n            </a>\n            <h4> {time.seconds} </h4>\n          </div>\n          <div className=\"examer-name\">\n            <h2>Welcom to the ReactJS test Name here</h2>\n          </div>\n          <div className=\"exam-question\">\n            <h3>\n              {crtQuestion.id}. {crtQuestion.question}\n            </h3>\n            <ul>\n              <li onClick={this.handleOptionClick}>{crtQuestion.optionone}</li>\n              <li onClick={this.handleOptionClick}>{crtQuestion.optiontwo}</li>\n              <li onClick={this.handleOptionClick}>\n                {crtQuestion.optionthree}\n              </li>\n              <li onClick={this.handleOptionClick}>{crtQuestion.optionfour}</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\LandingPage.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\util.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Navbar.js",["58","59"],"import React from \"react\";\n\nconst Navbar = (props) => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-light bg-light\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"#\">\n            <i className=\"fa fa-superpowers fa-lg\"></i>\n            {props.logo}\n          </a>\n          <ul className=\"navbar-nav mr-0 ml-auto\">\n            <button className=\"btn\" onClick={props.set} >\n              <a className=\"text-white\" href=\"#\">\n                {props.status ? 'Login': 'Signup'}\n              </a>\n            </button>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\SignOrLogin.js",[],"C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\Footer.js",["60","61","62"],"import React from \"react\";\n\nconst Footer = (props) => {\n  return (\n    <div>\n      <div className=\"footer\">\n        <div className=\"footer-logo\">\n          <h2>\n            <i className=\"fa fa-superpowers fa-lg\"></i>{props.logo}\n          </h2>\n          <div className=\"social-links\">\n            <h4>\n              <a href=\"#\">\n                <i className=\"fa fa-facebook-square fa-lg\" aria-hidden=\"true\"></i>\n              </a>\n            </h4>\n            <h4>\n              <a href=\"#\">\n                <i className=\"fa fa-github-square fa-lg\" aria-hidden=\"true\"></i>\n              </a>\n            </h4>\n            <h4>\n              <a href=\"#\">\n                <i className=\"fa fa-linkedin-square fa-lg\" aria-hidden=\"true\"></i>\n              </a>\n            </h4>\n          </div>\n        </div>\n        <div className=\"footer-navbar\">\n          <h6 className=\"mb-3 mb-lg-4 bold-text\">\n            <b>MENU</b>\n          </h6>\n          <ul className=\"list-unstyled\">\n            <li>Home</li>\n            <li className=\"text-muted\">About</li>\n            <li className=\"text-muted\">Blog</li>\n            <li className=\"text-muted\">Portfolio</li>\n          </ul>\n        </div>\n        <div className=\"footer-address\">\n          <h6 className=\"mb-3 mb-lg-4 text-muted bold-text mt-sm-0 mt-5\">\n            <b>ADDRESS</b>\n          </h6>\n          <p className=\"mb-1\">BANGANGA</p>\n          <p>INDORE (M.P.)</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\SignupPage.js",["63"],"import React, { Fragment, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nfunction SignupPage() {\n  const [user, setUser] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    contact: \"\",\n  });\n\n  const submitHandler = () => {\n    // var axios = require(\"axios\");\n    var data = JSON.stringify({\n      username: user.username,\n      email: user.email,\n      password: user.password,\n      contact: user.contact,\n    });\n\n\n    alert('Thanks for Singup!')\n\n    // var config = {\n    //   method: \"post\",\n    //   url: \"/register\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   data: data,\n    // };\n\n    // axios(config)\n    //   .then(function (response) {\n    //     console.log(JSON.stringify(response.data));\n    //   })\n    //   .catch(function (error) {\n    //     console.log(error);\n    //   });\n  };\n\n  return (\n    <Fragment>\n      <Helmet>\n        <title>EXAMR - SIGNUP</title>\n      </Helmet>\n      <div>\n        <form className=\"form\" onSubmit={submitHandler} > {/*  action=\"/register\" method=\"POST\" */}\n          <div className=\"form-group\">\n            <input\n              type=\"type\"\n              name=\"username\"\n              value={user.username}\n              onChange={(e) => setUser({ ...user, username: e.target.value })}\n              placeholder=\"Your Name\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={user.email}\n              onChange={(e) => setUser({ ...user, email: e.target.value })}\n              placeholder=\"Email\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={user.password}\n              onChange={(e) => setUser({ ...user, password: e.target.value })}\n              placeholder=\"Password\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"number\"\n              name=\"contact\"\n              value={user.contact}\n              onChange={(e) => setUser({ ...user, contact: e.target.value })}\n              placeholder=\"Contact\"\n              className=\"form-control\"\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"form-group mb-0 mt-4\">\n            <input\n              type=\"submit\"\n              className=\"btn text-white\"\n              value=\"Signup\"\n            />\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default SignupPage;\n","C:\\Users\\Tony Stark\\Desktop\\ONLINE_EXAM\\src\\components\\LoginPage.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":179,"column":13,"nodeType":"70","endLine":179,"endColumn":50},{"ruleId":"68","severity":1,"message":"69","line":8,"column":11,"nodeType":"70","endLine":8,"endColumn":48},{"ruleId":"68","severity":1,"message":"69","line":14,"column":15,"nodeType":"70","endLine":14,"endColumn":50},{"ruleId":"68","severity":1,"message":"69","line":13,"column":15,"nodeType":"70","endLine":13,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":18,"column":15,"nodeType":"70","endLine":18,"endColumn":27},{"ruleId":"68","severity":1,"message":"69","line":23,"column":15,"nodeType":"70","endLine":23,"endColumn":27},{"ruleId":"71","severity":1,"message":"72","line":14,"column":9,"nodeType":"73","messageId":"74","endLine":14,"endColumn":13},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]